name: Java CI with Maven

on:
  push:
    branches:
      - feature/**
      - TMI2-**
      - bug/**
  pull_request:
    branches:
      - feature/**
      - TMI2-**
      - bug/**

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn package --file pom.xml

      - name: DependencyCheck
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: DependencyCheck
        with:
          project: "gap-find-api-admin"
          path: "."
          format: "HTML"
          args: >
            --enableRetired
            --disableOssIndex true

      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: DependencyCheck report
          path: ${{github.workspace}}/reports

      - name: Unit tests
        run: mvn test

      - name: Read .nvmrc
        working-directory: src/test/e2e
        run: echo "::set-output name=NVMRC::$(cat .nvmrc)"
        id: nvm

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Install yarn
        working-directory: src/test/e2e
        run: yarn install

      - name: Generate .env for docker file
        run: |
          cat << EOF > .env
          AWS_API_GATEWAY_ID=${{ secrets.AWS_API_GATEWAY_ID }}
          AWS_API_GATEWAY_USAGE_PLAN_ID=${{ secrets.AWS_API_GATEWAY_USAGE_PLAN_ID }}
          AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          EOF

      - name: Setup cypress test environment
        run: |
          docker build -t gap-find-api-admin .
          docker compose -f docker-compose.yml up -d          

      - name: Check Health Endpoint
        id: healthcheck
        run: |
          HEALTH_ENDPOINT="http://localhost:8080/find/api/admin/health"
          MAX_ATTEMPTS=20 
          SLEEP_INTERVAL=2
          
          # Loop until a 200 status code is received or max attempts reached
          for ((i=1; i<=$MAX_ATTEMPTS; i++)); do
            STATUS_CODE=$(curl -o /dev/null -w '%{http_code}' -s $HEALTH_ENDPOINT)
            if [ $STATUS_CODE -eq 200 ]; then
              echo "Health check successful (HTTP 200 OK)"
              break
            else
              echo "Health check failed (HTTP $STATUS_CODE)"
              if [ $i -lt $MAX_ATTEMPTS ]; then
                echo "Retrying in $SLEEP_INTERVAL seconds..."
                sleep $SLEEP_INTERVAL
              else
                echo "Max attempts reached. Exiting with failure."
                exit 1
              fi
            fi
          done
        continue-on-error: false

      - name: Run cypress tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: src/test/e2e/
          config-file: cypress.config.js
          record: false
          browser: chrome
          runTests: true
          spec: cypress/e2e/**/*.cy.js

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          images: gap-find-api-admin


